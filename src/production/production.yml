secrets:
  postgres-backup_db:
  # The database backup service's database name.
    external: true
  traefik_cf-dns-api-token:
  # The DNS provider's DNS API token.
    external: true
  traefik_cf-zone-api-token:
  # The DNS provider's zone API token.
    external: true
services:
  1generator:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.1generator_secure.middlewares=cloudflarewarp
      - traefik.http.routers.1generator_secure.tls.certresolver=default
  adminer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.adminer_secure.middlewares=cloudflarewarp
      - traefik.http.routers.adminer_secure.tls.certresolver=default
  creal:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.creal_secure.middlewares=cloudflarewarp
      - traefik.http.routers.creal_secure.tls.certresolver=default
    image: ghcr.io/dargmuesli/creal:3.2.0
    user: (( prune ))
    volumes: (( prune ))
  creal_postgraphile:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.creal_postgraphile_secure.middlewares=cloudflarewarp,header_cors
      - traefik.http.routers.creal_postgraphile_secure.tls.certresolver=default
  creal_strapi:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.creal_strapi_secure.middlewares=cloudflarewarp
      - traefik.http.routers.creal_strapi_secure.tls.certresolver=default
    image: ghcr.io/dargmuesli/creal_strapi:3.0.21
    user: (( prune ))
    volumes:
    - (( prune ))
    - creal_strapi_data:/srv/app/public/
  hedgedoc:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.hedgedoc_secure.middlewares=cloudflarewarp
      - traefik.http.routers.hedgedoc_secure.tls.certresolver=default
  jobber:
    environment:
      SENTRY_CRONS: ${SENTRY_CRONS}
    volumes:
      - (( append ))
      - ./configurations/jobber/sinks:/srv/sinks:ro
  jonas-thelemann:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.jonas-thelemann_secure.middlewares=cloudflarewarp,header_cors
      - traefik.http.routers.jonas-thelemann_secure.tls.certresolver=default
    image: ghcr.io/dargmuesli/jonas-thelemann:5.28.2
    user: (( prune ))
    volumes: (( prune ))
  # minio: (( prune )) # breaks renovate
  nextcloud_nginx:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.nextcloud_nginx_secure.middlewares=cloudflarewarp,nextcloud_nginx_secure_redirectregex_dav,nextcloud_nginx_secure_redirectregex_well-known
      - traefik.http.routers.nextcloud_nginx_secure.tls.certresolver=default
      - traefik.http.routers.nextcloud_nginx_secure_calendar.tls.certresolver=default
      - traefik.http.routers.nextcloud_nginx_secure_contacts.tls.certresolver=default
  portainer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.portainer_secure.middlewares=cloudflarewarp
      - traefik.http.routers.portainer_secure.tls.certresolver=default
  postgres_backup:
  # Backup service for `postgres`.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:17-alpine
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backups/postgres/:/backups/
  thelounge:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.thelounge_secure.middlewares=cloudflarewarp
      - traefik.http.routers.thelounge_secure.tls.certresolver=default
  traefik:
    command:
    - (( prepend ))
    - --certificatesResolvers.default.acme.email=${TRAEFIK_ACME_EMAIL}
    - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
    - --certificatesResolvers.default.acme.dnsChallenge.provider=${TRAEFIK_ACME_PROVIDER}
    - --entryPoints.web.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32
    - --experimental.plugins.cloudflarewarp.moduleName=github.com/BetterCorp/cloudflarewarp
    - --experimental.plugins.cloudflarewarp.version=v1.3.3
    deploy:
      labels:
      - (( append ))
      - traefik.http.middlewares.cloudflarewarp.plugin.cloudflarewarp.disableDefault=false
      - traefik.http.routers.traefik_secure.middlewares=cloudflarewarp
      - traefik.http.routers.traefik_secure.tls.certresolver=default
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik_cf-dns-api-token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik_cf-zone-api-token
    secrets:
    - traefik_cf-dns-api-token
    - traefik_cf-zone-api-token
  traefik_certs-dumper:
  # You cannot access the reverse proxy's certificate helper directly.
    command:
    - file
    - --clean=false
    - --crt-name="$STACK_DOMAIN"
    - --dest=/etc/traefik/acme/
    - --key-name="$STACK_DOMAIN"
    - --source=/etc/traefik/acme/acme.json
    - --version=v2
    - --watch
    environment:
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: ldez/traefik-certs-dumper:v2.10.0
    volumes:
    - acme_data:/etc/traefik/acme/
  trapparty:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.trapparty_secure.middlewares=cloudflarewarp
      - traefik.http.routers.trapparty_secure.tls.certresolver=default
    image: ghcr.io/dargmuesli/trapparty:4.1.11
    user: (( prune ))
    volumes: (( prune ))
  trapparty_postgraphile:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.trapparty_postgraphile_secure.middlewares=cloudflarewarp,header_cors
      - traefik.http.routers.trapparty_postgraphile_secure.tls.certresolver=default
version: "3.7"
volumes:
  acme_data:
  # The reverse proxy's certificate data.
    {}
  creal_strapi_data:
  # The DJ website's CMS data.
    {}
  minio_data: (( prune ))
